
#include <GL/gl.h>
#include <GL/glut.h>
#include <stdio.h>
#include <math.h>

void circle(GLfloat rx, GLfloat ry, GLfloat cx, GLfloat cy)
{
    glBegin(GL_POLYGON);
    glVertex2f(cx, cy);
    for (int i = 0; i <= 360; i++)
    {
        float angle = i * 3.1416 / 180;
        float x = rx * cos(angle);
        float y = ry * sin(angle);
        glVertex2f((x + cx), (y + cy));
    }
    glEnd();
}

void init(void)
{
    glClearColor(0.0, 0.0, 0.9, 0.0);
    glMatrixMode(GL_PROJECTION);
    gluOrtho2D(0.0, 500, 0.0, 500);
}

void display(void)
{
    glClear(GL_COLOR_BUFFER_BIT);

    // Road
    glColor3f(0, 0, 0);
    glBegin(GL_POLYGON);
    glVertex2d(0, 60);
    glVertex2d(500, 60);
    glVertex2d(500, 110);
    glVertex2d(0, 110);
    glEnd();

    // Car body
    glColor3f(1, 0, 0);  // Red color (values range from 0.0 to 1.0)
    glBegin(GL_POLYGON);
    glVertex2d(410, 100);
    glVertex2d(490, 100);
    glVertex2d(485, 130);
    glVertex2d(410, 130);
    glEnd();

    // Car top
    glColor3f(1, 0, 0);  // Red color (values range from 0.0 to 1.0)
    glBegin(GL_POLYGON);
    glVertex2d(420, 130);
    glVertex2d(475, 130);
    glVertex2d(465, 160);
    glVertex2d(430, 160);
    glEnd();

    // Car wheels
    glColor3f(0, 0, 0);  // Black color
    circle(10, 14, 435, 100);
    circle(10, 14, 465, 100);

    glColor3f(0.96, 0.96, 0.96);  // Light grey color (245/255)
    circle(6, 10, 435, 100);
    circle(6, 10, 465, 100);

    glFlush();
}

void mouse(int button, int state, int x, int y)
{
    if (button == GLUT_LEFT_BUTTON && state == GLUT_DOWN)
    {
        printf("Mouse left button pressed at (%d, %d)\n", x, y);
    }
}

void keyboard(unsigned char key, int x, int y)
{
    switch (key)
    {
    case 27: // ESC key
        exit(0);
        break;
    case 'r':
        glClearColor(1.0, 0.0, 0.0, 0.0); // Red background
        break;
    case 'g':
        glClearColor(0.0, 1.0, 0.0, 0.0); // Green background
        break;
    case 'b':
        glClearColor(0.0, 0.0, 1.0, 0.0); // Blue background
        break;
    default:
        break;
    }
    glutPostRedisplay();
}

void menu(int option)
{
    switch (option)
    {
    case 1:
        glClearColor(1.0, 0.0, 0.0, 0.0); // Red background
        break;
    case 2:
        glClearColor(0.0, 1.0, 0.0, 0.0); // Green background
        break;
    case 3:
        glClearColor(0.0, 0.0, 1.0, 0.0); // Blue background
        break;
    case 4:
        exit(0);
        break;
    default:
        break;
    }
    glutPostRedisplay();
}

void createMenu()
{
    int submenu = glutCreateMenu(menu);
    glutAddMenuEntry("Red", 1);
    glutAddMenuEntry("Green", 2);
    glutAddMenuEntry("Blue", 3);

    glutCreateMenu(menu);
    glutAddSubMenu("Change Background Color", submenu);
    glutAddMenuEntry("Exit", 4);
    glutAttachMenu(GLUT_RIGHT_BUTTON);
}

int main(int argc, char** argv)
{
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(1000, 600);
    glutInitWindowPosition(300, 50);
    glutCreateWindow("Moving Car");
    init();
    glutDisplayFunc(display);
    glutMouseFunc(mouse);
    glutKeyboardFunc(keyboard);
    createMenu();
    glutMainLoop();
    return 0;
}
